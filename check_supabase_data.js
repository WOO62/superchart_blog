const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: './dev.env' });

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL,
  process.env.SUPABASE_SERVICE_ROLE_KEY
);

async function checkSupabaseData() {
  try {
    // ÏÉàÎ°úÏö¥ Î¶¨Î∑∞ ID Î™©Î°ù
    const newReviewIds = [10002574, 10002499, 10002699, 10002454, 10002422, 10002491];
    
    console.log('üîç Supabase Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏ Ï§ë...\n');
    
    // Í∞Å IDÎ≥ÑÎ°ú ÌôïÏù∏
    for (const id of newReviewIds) {
      const { data, error } = await supabase
        .from('exposure_tracking')
        .select('*')
        .eq('proposition_id', id)
        .single();
      
      if (error && error.code !== 'PGRST116') { // PGRST116ÏùÄ Îç∞Ïù¥ÌÑ∞ ÏóÜÏùå
        console.error(`‚ùå ID ${id} Ï°∞Ìöå Ïò§Î•ò:`, error.message);
      } else if (data) {
        const registeredAt = new Date(data.review_registered_at);
        console.log(`‚úÖ ID ${id}: Ï†ÄÏû•Îê®`);
        console.log(`   Ï∫†ÌéòÏù∏: ${data.campaign_name}`);
        console.log(`   Îß§ÎãàÏ†Ä: ${data.manager}`);
        console.log(`   Îì±Î°ùÏãúÍ∞Ñ: ${registeredAt.toLocaleString('ko-KR')}`);
        console.log(`   ÏÉÅÌÉú: ${data.success_status}`);
      } else {
        console.log(`‚ùå ID ${id}: SupabaseÏóê ÏóÜÏùå`);
      }
    }
    
    // Ï†ÑÏ≤¥ Ïπ¥Ïö¥Ìä∏ ÌôïÏù∏
    const { count: totalCount } = await supabase
      .from('exposure_tracking')
      .select('*', { count: 'exact', head: true });
    
    console.log(`\nüìä Supabase Ï†ÑÏ≤¥ Îç∞Ïù¥ÌÑ∞: ${totalCount}Í∞ú`);
    
    // Ïò§Îäò Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    const { data: todayData, error: todayError } = await supabase
      .from('exposure_tracking')
      .select('proposition_id, campaign_name, review_registered_at')
      .gte('review_registered_at', today.toISOString())
      .order('review_registered_at', { ascending: false });
    
    if (!todayError && todayData) {
      console.log(`\nüìÖ Ïò§Îäò Ï†ÄÏû•Îêú Îç∞Ïù¥ÌÑ∞: ${todayData.length}Í∞ú`);
      
      if (todayData.length > 0) {
        console.log('\nÏµúÍ∑º 5Í∞ú:');
        todayData.slice(0, 5).forEach(item => {
          const time = new Date(item.review_registered_at);
          console.log(`   ID ${item.proposition_id}: ${item.campaign_name} (${time.toLocaleString('ko-KR')})`);
        });
      }
    }
    
  } catch (error) {
    console.error('‚ùå Ïò§Î•ò:', error.message);
  }
}

checkSupabaseData();